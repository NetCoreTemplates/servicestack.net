{"pages":[],"whatsnew":[{"slug":"feature1","draft":false,"title":"Booking System in minutes","image":"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/studio/bookings-splash.png","tags":[],"date":"\/Date(1605052800000-0000)\/","content":"To see the rapid development of AutoQuery in action we've created a quick demo showing how to create a simple multi-user Booking System from an empty [web](https://github.com/NetCoreTemplates/web) project, [mixed in](https://docs.servicestack.net/mix-tool) with the preferred RDBMS & Auth layered functionality, before enabling [Validation](https://docs.servicestack.net/validation), [AutoQuery](https://docs.servicestack.net/autoquery-rdbms), Admin Users & [CRUD Event Log](https://docs.servicestack.net/autoquery-audit-log) plugins - to lay the foundational features before building our App by first defining its `Booking` data model & its surrounding **Query**, **Create**, **Update** and **Soft Delete** Typed CRUD APIs with rich validation enforced by declarative Validation attributes and multi-layer authorization rules & access permissions protected using Authorization attributes.","url":"https://docs.servicestack.net/releases/v5.10#creating-a-multi-user-net-core-booking-system-in-minutes","wordCount":126,"lineCount":7,"group":"v5.10"},{"slug":"feature2","draft":false,"title":"Studio User Admin","image":"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/studio/studio-home.png","tags":[],"date":"\/Date(1605052800000-0000)\/","content":"We've caught a glimpse of the new User Admin Feature in the [Bookings CRUD demo](https://youtu.be/XpHAaCTV7jE) who utilizes it to create **Employee** and **Manager** users. The `AdminUsersFeature` provides Admin User Management APIs enabling remote programmatic access to your registered [User Auth Repository](https://docs.servicestack.net/authentication-and-authorization#user-auth-repository), featuring:\n\n- Works with existing `IUserAuthRepository` sync or async providers\n- Utilizes Progressive enhancement, e.g. search functionality utilizes `IQueryUserAuth` (if exists) performing a wildcard search over multiple fields, otherwise falls back to exact match on `UserName` or `Email`\n- Supports managing Auth Repositories utilizing custom `UserAuth` data models\n- Flexible UI options for customizing which fields to include in Search Results and Create/Edit UIs\n- Rich Metadata aggregating only App-specific Roles & Permissions defined in your App\n- User Events allow you to execute custom logic before & after each Created/Updated/Deleted User","url":"https://docs.servicestack.net/releases/v5.10#studio-user-management-ui","wordCount":145,"lineCount":14,"group":"v5.10"},{"slug":"feature3","draft":false,"title":"Sign In with Apple","image":"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/dev/web-signin-with-apple-login.png","tags":[],"date":"\/Date(1605052800000-0000)\/","content":"As mobile Apps is a target use-case for ServiceStack, this release also includes 1st class integration with **Sign In with Apple** OAuth provider. To assist with adoption we've also developed Sign In with Apple Integration Examples for iOS, Android & Web with working implementations for Flutter iOS/Android & SwiftUI Apps.","url":"https://docs.servicestack.net/releases/v5.10#sign-in-with-apple","wordCount":63,"lineCount":7,"group":"v5.10"},{"slug":"feature1","draft":false,"title":"Introducing ServiceStack Studio","image":"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/release-notes/v5.9/studio-home.png","tags":[],"date":"\/Date(1594252800000-0000)\/","content":"Another exciting development in this release is the successor to [Admin UI](https://github.com/ServiceStack/Admin):\n**ServiceStack Studio!** - a capability-based UI to manage multiple remote ServiceStack instances from either a Chromium Desktop App\nor cross-platform .NET Core Web App.\n\nThe richer metadata in ServiceStack Services allows Studio to logically group Services around Data Models, enabling its high-level\nsemantic features like its native data-grid like UX over all AutoQuery Services to quickly discover, search, create, update and\ndelete entities based on the available AutoQuery APIs and whether Authenticated Users have access to them.","url":"https://docs.servicestack.net/releases/v5.9#introducing-servicestack-studio","wordCount":102,"lineCount":13,"group":"v5.9"},{"slug":"feature2","draft":false,"title":"Instantly Servicify existing Systems!","image":"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/svg/servicify.svg","tags":[],"date":"\/Date(1594252800000-0000)\/","content":"ServiceStack also reached maximum autonomy for a Services framework where in addition to **AutoQuery** automatically providing your Services implementations,\n**Studio** providing its instant UI, ServiceStack also gained the capability to **generate your entire API!** Including Typed API contracts,\ndata models, implementations & human-friendly pluralized HTTP API routes over an existing System RDBMS's tables!\n\nServiceStack's **AutoGen** enables a number of exciting possibilities, predominantly it's the fastest way to ServiceStack-ify an\nexisting systems RDBMS where it will serve as an invaluable tool for anyone wanting to quickly migrate to ServiceStack and access its\nfunctionality ecosystem around ServiceStack Services:","url":"https://docs.servicestack.net/releases/v5.9#instantly-servicify-existing-systems","wordCount":106,"lineCount":13,"group":"v5.9"},{"slug":"feature3","draft":false,"title":"Generate Types for RDBMS Tables","image":"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/release-notes/v5.9/autodto-youtube.png","tags":[],"date":"\/Date(1594252800000-0000)\/","content":"generate-types-for-rdbms-tables\nimage: https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/release-notes/v5.9/autodto-youtube.png\n---\n\nAn unintended consequence of **AutoGen** that's potentially universally appealing to even non .NET developers is that it's also a way to instantly\ngenerate Types for all RDBMS tables in all of ServiceStack [supported client languages](https://docs.servicestack.net/add-servicestack-reference),\nwhich thanks to being configurable in a [Sharp App](https://sharpscript.net/docs/sharp-apps) can be executed from the command-line using\nthe [dotnet tools](https://docs.servicestack.net/dotnet-tool)","url":"https://docs.servicestack.net/releases/v5.9#autodtogenerate-types-for-rdbms-tables","wordCount":75,"lineCount":10,"group":"v5.9"},{"slug":"feature1","draft":false,"title":"Simple Code-First DB MigrationsServiceStack gRPC support","image":"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/grpc/grpc-horizontal-color.svg","tags":[],"date":"\/Date(1578960000000-0000)\/","content":"We're super excited to open the year with the premier feature in this release **ServiceStack gRPC**, our highly-productive entry into the\n[gRPC](https://grpc.io) universe with a number of value-added additions that makes developing and consuming gRPC Services a joy with USPs\nthat leverages and preserves your existing knowledge and investments and maximizes the utility of your Services offering unprecedented value\nfor your development efforts.","url":"https://docs.servicestack.net/grpc","wordCount":77,"lineCount":10,"group":"v5.8"},{"slug":"feature2","draft":false,"title":"Updated Templates .NET Core 3.1","image":"https://raw.githubusercontent.com/ServiceStack/Assets/master/csharp-templates/vue-nuxt.png","tags":[],"date":"\/Date(1578960000000-0000)\/","content":"With the release of [.NET Core 3.1 LTS](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/) we've standardized our Project Templates\nand tools to **.NET Core 3.1 LTS** whilst continuing to support existing **.NET Core 2.1+** and **.NET Framework** projects including\n[ASP.NET Core Apps on the .NET Framework](https://docs.servicestack.net/templates-corefx).","url":"https://docs.servicestack.net/releases/v5.8#net-core-31-lts-project-templates","wordCount":67,"lineCount":9,"group":"v5.8"}],"videos":[],"posts":[],"podcasts":[]}