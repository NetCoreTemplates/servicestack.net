@page "/start-auth"
@attribute [RenderStatic]

@{
    ViewData["Title"] = "Create new .NET 6 project";
}

@await Html.PartialAsync("StartHeader")

<section>
    <div class="bg-white dark:bg-black py-32 px-6 lg:px-8">
        <div class="mx-auto max-w-4xl text-base leading-7 text-gray-700 dark:text-gray-200">
            <p class="text-base font-semibold leading-7 text-indigo-600 dark:text-gray-300">Getting Started</p>
            <h1 class="mt-2 text-3xl font-bold tracking-tight text-gray-900 dark:text-gray-50 sm:text-4xl">
                Customize & Download a new C# Project
            </h1>
            <p class="mt-6 text-xl leading-8">
                ServiceStack has a number of different integrated project templates to help you get started quickly
            </p>
        </div>
        
        <div id="projects"></div>
        
    </div>
</section>

<script type="module">
import { ref, computed, watch, onMounted } from "vue"
import { queryString, setQueryString } from "@@servicestack/client"
import { mount, AppData } from "app.mjs"

const App = {
    template:`
    <section class="w-full flex flex-col justify-center">
        <div class="mt-4 mb-2">
            <div class="flex justify-center mb-8 pb-8">
                <div class="w-70">
                    <input v-model="name" type="text" placeholder="Project Name" autocorrect="off" spellcheck="false" v-on:keypress="isAlphaNumeric"
                           class="mt-1 text-lg block w-full px-3 py-2 bg-white dark:bg-black border border-slate-300 rounded-md text-sm shadow-sm placeholder-slate-400 focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500">
                </div>
            </div>
        </div>

        <div id="mix" class="mb-4">
            <div>
              <div class="mb-16 max-w-prose mx-auto">
                <nav class="isolate flex divide-x divide-gray-200 rounded-lg shadow" aria-label="Tabs">
                  <a href="/start#projects" class="text-gray-500 hover:text-gray-700 rounded-l-lg group relative min-w-0 flex-1 overflow-hidden bg-white py-4 px-4 text-center text-sm font-medium hover:bg-gray-50 focus:z-10" aria-current="page">
                    <span>ASP.NET Identity Auth</span>
                    <span aria-hidden="true" class="bg-transparent absolute inset-x-0 bottom-0 h-0.5"></span>
                  </a>
                  <a href="/start-auth#projects" class="text-gray-900 rounded-r-lg group relative min-w-0 flex-1 overflow-hidden bg-white py-4 px-4 text-center text-sm font-medium hover:bg-gray-50 focus:z-10">
                    <span>ServiceStack Auth</span>
                    <span aria-hidden="true" class="bg-indigo-500 absolute inset-x-0 bottom-0 h-0.5"></span>
                  </a>
                </nav>
              </div>
            </div>

            <div class="flex justify-center flex-col items-center">
                <h2 class="mb-3 text-2xl font-bold tracking-tight text-gray-900 dark:text-gray-50">Add Features</h2>
                <form class="flex flex-wrap">
                    <div class="p-2 mr-2">
                        <h4 class="block uppercase text-slate-500 font-semibold mb-4">Authentication</h4>
                        <div>
                            <input id="chkAuth" v-model="mixModel.auth" type="checkbox" class="h-4 w-4 rounded border-gray-300 dark:border-gray-600 text-indigo-600 dark:text-indigo-300 focus:ring-indigo-600" value="auth">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkAuth">auth</label>
                        </div>
                        <h4 class="block uppercase text-slate-500 font-semibold my-2">Auth Repository</h4>
                        <div>
                            <input id="chkAuthDb" v-model="mixModel['auth-repo']" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="auth-repo" value="auth-db">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkAuthDb">RDBMS</label>
                        </div>
                        <div>
                            <input id="chkAuthRedis" v-model="mixModel['auth-repo']" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="auth-repo" value="auth-redis">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkAuthRedis">Redis</label>
                        </div>
                        <div>
                            <input id="chkAuthDynamoDb" v-model="mixModel['auth-repo']" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="auth-repo" value="auth-dynamodb">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkAuthDynamoDb">DynamoDB</label>
                        </div>
                        <div>
                            <input id="chkAuthMemory" v-model="mixModel['auth-repo']" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="auth-repo" value="auth-memory">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkAuthMemory">In Memory</label>
                        </div>
                    </div>
                    <div class="p-2 mr-2">
                        <h4 class="block uppercase text-slate-500 font-semibold mb-4">Features</h4>
                        <div>
                            <input id="chkAutoQuery" v-model="mixModel.features" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="aq" value="autoquery">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkAutoQuery">AutoQuery</label>
                        </div>
                        <div>
                            <input id="chkAutoGen" v-model="mixModel.features" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="aq" value="autocrudgen">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkAutoGen"><abbr title="Auto generate AutoQuery &amp; CRUD APIs for an existing RDBMS">AutoGen CRUD</abbr></label>
                        </div>
                        <div>
                            <input id="chkProfiling" v-model="mixModel.profiling" type="checkbox" class="h-4 w-4 rounded border-gray-300 dark:border-gray-600 text-indigo-600 dark:text-indigo-300 focus:ring-indigo-600" value="profiling">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkProfiling">Profiling</label>
                        </div>
                        <div>
                            <input id="chkServerEvents" v-model="mixModel.serverevents" type="checkbox" class="h-4 w-4 rounded border-gray-300 dark:border-gray-600 text-indigo-600 dark:text-indigo-300 focus:ring-indigo-600" value="serverevents">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkServerEvents">Server Events</label>
                        </div>
                        <div>
                            <input id="chkCors" v-model="mixModel.cors" type="checkbox" class="h-4 w-4 rounded border-gray-300 dark:border-gray-600 text-indigo-600 dark:text-indigo-300 focus:ring-indigo-600" value="cors">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkCors"><abbr title="Cross-Origin Resource Sharing">CORS</abbr></label>
                        </div>
                        <div>
                            <input id="chkOpenApi" v-model="mixModel.openapi" type="checkbox" class="h-4 w-4 rounded border-gray-300 dark:border-gray-600 text-indigo-600 dark:text-indigo-300 focus:ring-indigo-600" value="openapi">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkOpenApi">Open API</label>
                        </div>
                    </div>
                    <div class="p-2 mr-2">
                        <h4 class="block uppercase text-slate-500 font-semibold mb-4">RDBMS</h4>
                        <div>
                            <input id="chkDbPostgreSql" v-model="mixModel.db" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="db" value="postgres">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkDbPostgreSql">PostgreSQL</label>
                        </div>
                        <div>
                            <input id="chkDbSqlServer" v-model="mixModel.db" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="db" value="sqlserver">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkDbSqlServer">SQL Server</label>
                        </div>
                        <div>
                            <input id="chkDbMySql" v-model="mixModel.db" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="db" value="mysql">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkDbMySql">MySQL</label>
                        </div>
                        <div>
                            <input id="chkDbSqlite" v-model="mixModel.db" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="db" value="sqlite">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkDbSqlite">SQLite</label>
                        </div>
                        <div>
                            <input id="chkFirebird" v-model="mixModel.db" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="db" value="firebird">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkFirebird">Firebird</label>
                        </div>
                        <div>
                            <input id="chkOracle" v-model="mixModel.db" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="db" value="oracle">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkOracle">Oracle</label>
                        </div>
                    </div>
                    <div class="p-2 mr-2">
                        <h4 class="block uppercase text-slate-500 font-semibold mb-4">Data Stores</h4>
                        <div>
                            <input id="chkRedis" v-model="mixModel.redis" type="checkbox" class="h-4 w-4 rounded border-gray-300 dark:border-gray-600 text-indigo-600 dark:text-indigo-300 focus:ring-indigo-600" value="redis">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkRedis">Redis</label>
                        </div>
                        <div>
                            <input id="chkDynamoDb" v-model="mixModel.dynamodb" type="checkbox" class="h-4 w-4 rounded border-gray-300 dark:border-gray-600 text-indigo-600 dark:text-indigo-300 focus:ring-indigo-600" value="dynamodb">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkDynamoDb">DynamoDB</label>
                        </div>
                        <div>
                            <input id="chkRavenDb" v-model="mixModel.ravendb" type="checkbox" class="h-4 w-4 rounded border-gray-300 dark:border-gray-600 text-indigo-600 dark:text-indigo-300 focus:ring-indigo-600" value="ravendb">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkRavenDb">RavenDB</label>
                        </div>
                        <div>
                            <input id="chkMongoDb" v-model="mixModel.mongodb" type="checkbox" class="h-4 w-4 rounded border-gray-300 dark:border-gray-600 text-indigo-600 dark:text-indigo-300 focus:ring-indigo-600" value="mongodb">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkMongoDb">MongoDB</label>
                        </div>
                    </div>
                    <div class="p-2 mr-2">
                        <h4 class="block uppercase text-slate-500 font-semibold mb-4">Messaging (MQ)</h4>
                        <div>
                            <input id="chkBackgroundMq" v-model="mixModel.mq" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="mq" value="backgroundmq">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkBackgroundMq">Background MQ</label>
                        </div>
                        <div>
                            <input id="chkRabbitMq" v-model="mixModel.mq" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="mq" value="rabbitmq">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkRabbitMq">RabbitMQ</label>
                        </div>
                        <div>
                            <input id="chkRedisMq" v-model="mixModel.mq" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="mq" value="redismq">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkRedisMq">Redis MQ</label>
                        </div>
                        <div>
                            <input id="chkSqs" v-model="mixModel.mq" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="mq" value="sqs">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkSqs">AWS SQS MQ</label>
                        </div>
                        <div>
                            <input id="chkServiceBus" v-model="mixModel.mq" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600" name="mq" value="servicebus">
                            <label class="select-none ml-3 text-sm font-medium leading-6 text-gray-900 dark:text-gray-50" for="chkServiceBus">Azure Service Bus</label>
                        </div>
                    </div>
                </form>
                <div id="reset" :class="['text-blue-500 text-blue-600:hover cursor-pointer', mixTags.length ? '' : 'invisible']" v-on:click="reset">reset</div>
                <div class="text-gray-500">
                    see <a href="https://docs.servicestack.net/mix-tool">mix</a> for adding more features after project is created
                </div>
            </div>
        </div>

        <div class="mb-4 flex flex-col items-center">
            <h2 class="my-8 tracking-tight font-semibold text-xl text-slate-600">Tailwind CSS Templates</h2>
            <div class="flex flex-wrap justify-center gap-x-2">
                <div>
                    <ProjectTemplate :name="name" repo="NetCoreTemplates/nextjs" :tags="['autoquery','auth']" :count="count('nextjs')">
                        <div class="mb-3 text-xl font-medium text-gray-700 dark:text-gray-200">Next.js</div>
                        <template #icon>
                            <svg class="w-12 h-12 text-indigo-600" xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 15 15"><path fill="currentColor" fill-rule="evenodd" d="M0 7.5a7.5 7.5 0 1 1 11.697 6.216L4.907 4.21A.5.5 0 0 0 4 4.5V12h1V6.06l5.83 8.162A7.5 7.5 0 0 1 0 7.5ZM10 10V4h1v6h-1Z" clip-rule="evenodd"/></svg>
                        </template>
                    </ProjectTemplate>
                </div>
                <div>
                    <ProjectTemplate :name="name" repo="NetCoreTemplates/vue-vite" :tags="['autoquery','auth']" :count="count('vue-vite')">
                        <div class="mb-3 text-xl font-medium text-gray-700 dark:text-gray-200">Vue Vite</div>
                        <template #icon>
                            <svg class="w-12 h-12 text-indigo-600" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M2 3h3.5L12 15l6.5-12H22L12 21L2 3m4.5 0h3L12 7.58L14.5 3h3L12 13.08L6.5 3Z"/></svg>
                        </template>
                    </ProjectTemplate>
                </div>
                <div>
                    <ProjectTemplate :name="name" repo="NetCoreTemplates/vue-ssg" :tags="['autoquery','auth']" :count="count('vue-ssg')">
                        <div class="mb-3 text-xl font-medium text-gray-700 dark:text-gray-200">Vue SSG</div>
                        <template #icon>
                            <svg class="w-12 h-12 text-indigo-600" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M2 3h3.5L12 15l6.5-12H22L12 21L2 3m4.5 0h3L12 7.58L14.5 3h3L12 13.08L6.5 3Z"/></svg>
                        </template>
                    </ProjectTemplate>
                </div>
            </div>
        </div>

        <div class="mb-4 flex flex-col items-center">
            <h2 class="my-8 tracking-tight font-semibold text-xl text-slate-600">Bootstrap CSS Templates</h2>
            <div class="flex flex-wrap justify-center gap-x-2">
                <div>
                    <ProjectTemplate :name="name" :mix="mixTags" repo="NetCoreTemplates/razor-pages" :tags="['auth']" :count="count('razor-pages')">
                        <div class="mb-3 text-xl font-medium text-gray-700 dark:text-gray-200">Razor Pages</div>
                        <template #icon>
                            <svg class="w-12 h-12 text-indigo-600" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 32 32"><path fill="currentColor" d="M23.844 27.692a16.332 16.332 0 0 1-6.645 1.3q-6.364 0-10.013-3.243a11.3 11.3 0 0 1-3.649-8.9a13.716 13.716 0 0 1 3.785-9.898A12.716 12.716 0 0 1 16.9 3.008a11.676 11.676 0 0 1 8.425 3.006a9.994 9.994 0 0 1 3.142 7.533a10.187 10.187 0 0 1-2.318 7.114a7.532 7.532 0 0 1-5.817 2.547a2.613 2.613 0 0 1-1.845-.642a2.323 2.323 0 0 1-.764-1.6a4.9 4.9 0 0 1-4.148 2.243a4.6 4.6 0 0 1-3.507-1.479a5.706 5.706 0 0 1-1.384-4.063a9.913 9.913 0 0 1 2.2-6.357q2.2-2.763 4.8-2.763a5.063 5.063 0 0 1 4.256 1.716l.311-1.338h2.405l-2.081 9.08a10.716 10.716 0 0 0-.352 2.243q0 .972.744.972a4.819 4.819 0 0 0 3.877-2.047a8.93 8.93 0 0 0 1.621-5.681a7.98 7.98 0 0 0-2.675-6.175a9.887 9.887 0 0 0-6.919-2.432a10.6 10.6 0 0 0-8.158 3.467a12.066 12.066 0 0 0-3.2 8.495a9.561 9.561 0 0 0 3.06 7.573q3.06 2.7 8.586 2.7a13.757 13.757 0 0 0 5.675-1.054ZM19.466 12.25a3.977 3.977 0 0 0-3.6-1.716q-1.824 0-3.263 2.23a8.726 8.726 0 0 0-1.439 4.824q0 3.635 2.905 3.635a3.771 3.771 0 0 0 2.651-1.183a6.309 6.309 0 0 0 1.7-3.2Z"></path></svg>
                        </template>
                    </ProjectTemplate>
                </div>
                <div>
                    <ProjectTemplate :name="name" :mix="mixTags" repo="NetCoreTemplates/mvcauth" :tags="['auth']" :count="count('mvcauth')">
                        <div class="mb-3 text-xl font-medium text-gray-700 dark:text-gray-200">MVC</div>
                        <template #icon>
                            <svg class="w-12 h-12 text-indigo-600" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M11.5 3v8.5H3V3h8.5zm0 18H3v-8.5h8.5V21zm1-18H21v8.5h-8.5V3zm8.5 9.5V21h-8.5v-8.5H21z"/></svg>
                        </template>
                    </ProjectTemplate>
                </div>
                <div>
                    <ProjectTemplate :name="name" :mix="mixTags" repo="NetCoreTemplates/script" :tags="['auth']" :count="count('script')">
                        <div class="mb-3 text-xl font-medium text-gray-700 dark:text-gray-200">#Script</div>
                        <template #icon>
                            <img class="w-12 h-12 text-indigo-600" src="/img/svgs/script.svg">
                        </template>
                    </ProjectTemplate>
                </div>
            </div>
        </div>

        <div class="mb-4 flex flex-col items-center">
            <h2 class="my-8 tracking-tight font-semibold text-xl text-slate-600">Single Page Apps</h2>
            <div class="flex flex-wrap justify-center gap-x-2">
                <div>
                    <ProjectTemplate :name="name" :mix="mixTags" repo="NetCoreTemplates/vue-spa" :tags="['auth']" :count="count('vue-spa')">
                        <div class="mb-3 text-xl font-medium text-gray-700 dark:text-gray-200">Vue</div>
                        <template #icon>
                            <svg class="w-12 h-12 text-indigo-600" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M2 3h3.5L12 15l6.5-12H22L12 21L2 3m4.5 0h3L12 7.58L14.5 3h3L12 13.08L6.5 3Z"/></svg>
                        </template>
                    </ProjectTemplate>
                </div>
                <div>
                    <ProjectTemplate :name="name" :mix="mixTags" repo="NetCoreTemplates/react-spa" :tags="['auth']" :count="count('react-spa')">
                        <div class="mb-3 text-xl font-medium text-gray-700 dark:text-gray-200">React</div>
                        <template #icon>
                            <svg class="w-12 h-12 text-indigo-600" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M12 10.11c1.03 0 1.87.84 1.87 1.89c0 1-.84 1.85-1.87 1.85c-1.03 0-1.87-.85-1.87-1.85c0-1.05.84-1.89 1.87-1.89M7.37 20c.63.38 2.01-.2 3.6-1.7c-.52-.59-1.03-1.23-1.51-1.9a22.7 22.7 0 0 1-2.4-.36c-.51 2.14-.32 3.61.31 3.96m.71-5.74l-.29-.51c-.11.29-.22.58-.29.86c.27.06.57.11.88.16l-.3-.51m6.54-.76l.81-1.5l-.81-1.5c-.3-.53-.62-1-.91-1.47C13.17 9 12.6 9 12 9c-.6 0-1.17 0-1.71.03c-.29.47-.61.94-.91 1.47L8.57 12l.81 1.5c.3.53.62 1 .91 1.47c.54.03 1.11.03 1.71.03c.6 0 1.17 0 1.71-.03c.29-.47.61-.94.91-1.47M12 6.78c-.19.22-.39.45-.59.72h1.18c-.2-.27-.4-.5-.59-.72m0 10.44c.19-.22.39-.45.59-.72h-1.18c.2.27.4.5.59.72M16.62 4c-.62-.38-2 .2-3.59 1.7c.52.59 1.03 1.23 1.51 1.9c.82.08 1.63.2 2.4.36c.51-2.14.32-3.61-.32-3.96m-.7 5.74l.29.51c.11-.29.22-.58.29-.86c-.27-.06-.57-.11-.88-.16l.3.51m1.45-7.05c1.47.84 1.63 3.05 1.01 5.63c2.54.75 4.37 1.99 4.37 3.68c0 1.69-1.83 2.93-4.37 3.68c.62 2.58.46 4.79-1.01 5.63c-1.46.84-3.45-.12-5.37-1.95c-1.92 1.83-3.91 2.79-5.38 1.95c-1.46-.84-1.62-3.05-1-5.63c-2.54-.75-4.37-1.99-4.37-3.68c0-1.69 1.83-2.93 4.37-3.68c-.62-2.58-.46-4.79 1-5.63c1.47-.84 3.46.12 5.38 1.95c1.92-1.83 3.91-2.79 5.37-1.95M17.08 12c.34.75.64 1.5.89 2.26c2.1-.63 3.28-1.53 3.28-2.26c0-.73-1.18-1.63-3.28-2.26c-.25.76-.55 1.51-.89 2.26M6.92 12c-.34-.75-.64-1.5-.89-2.26c-2.1.63-3.28 1.53-3.28 2.26c0 .73 1.18 1.63 3.28 2.26c.25-.76.55-1.51.89-2.26m9 2.26l-.3.51c.31-.05.61-.1.88-.16c-.07-.28-.18-.57-.29-.86l-.29.51m-2.89 4.04c1.59 1.5 2.97 2.08 3.59 1.7c.64-.35.83-1.82.32-3.96c-.77.16-1.58.28-2.4.36c-.48.67-.99 1.31-1.51 1.9M8.08 9.74l.3-.51c-.31.05-.61.1-.88.16c.07.28.18.57.29.86l.29-.51m2.89-4.04C9.38 4.2 8 3.62 7.37 4c-.63.35-.82 1.82-.31 3.96a22.7 22.7 0 0 1 2.4-.36c.48-.67.99-1.31 1.51-1.9Z"/></svg>
                        </template>
                    </ProjectTemplate>
                </div>
                <div>
                    <ProjectTemplate :name="name" :mix="mixTags" repo="NetCoreTemplates/angular-spa" :tags="['auth']" :count="count('angular-spa')">
                        <div class="mb-3 text-xl font-medium text-gray-700 dark:text-gray-200">Angular</div>
                        <template #icon>
                            <svg class="w-12 h-12 text-indigo-600" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="m12 2.5l8.84 3.15l-1.34 11.7L12 21.5l-7.5-4.15l-1.34-11.7L12 2.5m0 2.1L6.47 17h2.06l1.11-2.78h4.7L15.45 17h2.05L12 4.6m1.62 7.9h-3.23L12 8.63l1.62 3.87Z"/></svg>
                        </template>
                    </ProjectTemplate>
                </div>
                <div>
                    <ProjectTemplate :name="name" :mix="mixTags" repo="NetCoreTemplates/svelte-spa" :tags="['auth']" :count="count('svelte-spa')">
                        <div class="mb-3 text-xl font-medium text-gray-700 dark:text-gray-200">Svelte</div>
                        <template #icon>
                            <svg class="w-12 h-12 text-indigo-600" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="m15 8l-5 3l.821-.495c1.86-1.15 4.412-.49 5.574 1.352a3.91 3.91 0 0 1-1.264 5.42l-5.053 3.126c-1.86 1.151-4.312.591-5.474-1.251a3.91 3.91 0 0 1 1.263-5.42l.26-.16"/><path d="m8 17l5-3l-.822.496c-1.86 1.151-4.411.491-5.574-1.351a3.91 3.91 0 0 1 1.264-5.42l5.054-3.127c1.86-1.15 4.311-.59 5.474 1.252a3.91 3.91 0 0 1-1.264 5.42l-.26.16"/></g></svg>
                        </template>
                    </ProjectTemplate>
                </div>
                <div>
                    <ProjectTemplate :name="name" :mix="mixTags" repo="NetCoreTemplates/aurelia-spa" :count="count('aurelia-spa')">
                        <div class="mb-3 text-xl font-medium text-gray-700 dark:text-gray-200">Aurelia</div>
                        <template #icon>
                            <img class="w-12 h-12 text-indigo-600" src="/img/svgs/aurelia.svg">
                        </template>
                    </ProjectTemplate>
                </div>
                <div>
                    <ProjectTemplate :name="name" :mix="mixTags" repo="NetCoreTemplates/parcel" :count="count('parcel')">
                        <div class="mb-3 text-xl font-medium text-gray-700 dark:text-gray-200">Parcel</div>
                        <template #icon>
                            <svg class="w-12 h-12 text-indigo-600" xmlns="http://www.w3.org/2000/svg" width="640" height="512" viewBox="0 0 640 512"><path fill="currentColor" d="M45.9 42.1c3-6.1 9.6-9.6 16.3-8.7L307 64l244.8-30.6c6.7-.8 13.3 2.7 16.3 8.7l41.7 83.4c9 17.9-.6 39.6-19.8 45.1l-163.4 46.7c-13.9 4-28.8-1.9-36.2-14.3L307 64l-83.4 139c-7.4 12.4-22.3 18.3-36.2 14.3L24.1 170.6c-19.3-5.5-28.8-27.2-19.9-45.1l41.7-83.4zM308.1 128l54.9 91.4c14.9 24.8 44.6 36.6 72.5 28.6L563 211.6v167c0 22-15 41.2-36.4 46.6l-204.1 51c-10.2 2.6-20.9 2.6-31 0l-204.1-51C66 419.7 51 400.5 51 378.5v-167L178.6 248c27.8 8 57.6-3.8 72.5-28.6l54.8-91.4h2.2z"/></svg>
                        </template>
                    </ProjectTemplate>
                </div>
            </div>
            <div class="text-gray-500">
                Run <b>npm install</b> in the <b>{{name}}</b> project folder after install               
            </div>
        </div>

        <div class="mt-12 text-gray-500 flex flex-col items-center">
            <p class="my-4 text-center">
                Alternatively create & restore this new custom Web App with the 
                <a class="text-indigo-600" href="https://docs.servicestack.net/dotnet-new">x dotnet tool</a>:            
            </p>
            <CopyLine :text="mixTool" />
        </div>

    </section>`,
    setup(props) {
        const name = ref('')
        const mixModel = ref({})

        function isAlphaNumeric(e) {
            const c = e.charCode;
            if (c >= 65 && c <= 90 || c >= 97 && c <= 122 || c >= 48 && c <= 57 || c === 95) //A-Za-z0-9_
                return;
            e.preventDefault()
        }
        
        const mixTags = computed(() => {
            const ret = []
            Object.keys(mixModel.value).forEach(k => {
                const v = mixModel.value[k]
                if (typeof v == 'boolean') {
                    if (v) ret.push(k)
                } else if (v != null) {
                    ret.push(v)
                }
            })
            return ret
        })
        
        function reset() {
            mixModel.value = {}
            name.value = ''
        }
        function count(repo) {
            return AppData.installs[repo] || 1
        }
        
        const mixTool = computed(() => 
            `x new web ${name.value||'MyApp'} && cd ${name.value||'MyApp'}${mixTags.value.length > 0 ? ' && x mix -f ' + mixTags.value.join(' ') : ''}`)
        
        watch([name, mixModel], () => {
            const args = { Name: name.value || undefined, Mix: mixTags.value.length ? mixTags.value.join(',') : undefined }
            const url = setQueryString(location.href, args)
            history.pushState({}, '', url)
        }, { deep:true })
        
        onMounted(() => {
            const qs = queryString(location.search)
            const boolProps = Array.from(document.querySelectorAll('[type=radio]')).map(x => [x.name,x.value])
            const mix = (qs.mix || qs.Mix || '').split(',').filter(x => !!x)
            mix.forEach(tag => {
                const boolProp = boolProps.find(x => x[1] === tag)
                if (boolProp) {
                    mixModel.value[boolProp[0]] = boolProp[1]
                } else {
                    mixModel.value[tag] = true
                }
            })
        })
        
        return { name, mixModel, mixTags, isAlphaNumeric, mixTool, reset, count }
    }
}
mount('#projects', App)
</script>

@await Html.PartialAsync("StartFooter")