[{"slug":"vue-spa","draft":false,"title":"Enhanced ASP .NET Core SPA Templates","image":"https://servicestack.net/img/whatsnew/v8.2/spa-logos.webp","tags":[],"date":"\/Date(1709510400000-0000)\/","content":"With ServiceStack now fully integrated with .NET 8, our focus has shifted from providing platform-agnostic solutions \nthat supports all ServiceStack's .NET Framework and .NET hosts to building on the new capabilities of .NET 8 by \nenhancing ASP .NET Core's built-in features and templates with ServiceStack's high-productivity features.\n\n### New Vue SPA Template\n\nThe latest Vue SPA template is a good example of this, building on and enhancing the built-in ASP.NET Core Vue SPA \ntemplate with many high-productivity features:\n\n- ASP.NET Core Identity Auth Integration\n- End-to-end Typed TypeScript APIs\n- Beautiful Tailwind CSS with Dark Mode\n- Universal Vite Press Plugin Markdown features\n- Highly Productive Vue Component Library\n- Effortless CRUD and Admin UIs with AutoQueryGrid","url":"https://docs.servicestack.net/releases/v8_02","wordCount":125,"lineCount":21,"group":"v8.2","order":1},{"slug":"react-spa","draft":false,"title":"New ASP.NET Core React SPA Template","image":"https://servicestack.net/img/whatsnew/v8.2/react-spa.png","tags":[],"date":"\/Date(1709510400000-0000)\/","content":"The ASP.NET Core Vite React SPA Template has also been upgraded and enhanced with many high-productivity features including:\n\n- ASP.NET Core Identity Auth Integration\n- End-to-end Typed TypeScript APIs\n- Beautiful Tailwind CSS with Dark Mode\n- Universal Vite Press Plugin Markdown features\n- Integration with shadcn/ui Tailwind React components\n- Native MDX Markdown integration\n- React Router and conventional file system based routing\n- Tailwind Validation bound Input Form Components","url":"https://docs.servicestack.net/releases/v8_02#asp.net-core-react-spa-template","wordCount":80,"lineCount":16,"group":"v8.2","order":2},{"slug":"compose-multiplatform","draft":false,"title":"New Kotlin Compose Multiplaform Template","image":"https://servicestack.net/img/posts/kotlin-compose-multiplatform/compose-multiplatform.webp","tags":[],"date":"\/Date(1709510400000-0000)\/","content":"The last few years of neglect of Xamarin has slid it into irrelevance, removing itself from consideration in the already \nshortlist of viable development options for creating native multi-platform iOS, Android and Desktop Apps,\n\nFortunately JetBrains has stepped in to fill the void with Compose Multiplatform offering a modern alternative for creating \nnative Mobile, Desktop & Web Apps which can also leverage Kotlin ServiceStack Reference for end-to-end typed APIs.\n\nWe'll look at the latest Compose Multiplatform v1.6 Release and use it to build a cross-platform Desktop App integrated \nwith a .NET API backend utilizing Kotlin ServiceStack Reference to generate Kotlin DTOs that can be used with the \ngeneric ServiceStack Java JsonServiceClient to enable its end-to-end typed API integration.","url":"https://docs.servicestack.net/releases/v8_02#compose-multiplatform-ios-android-apps","wordCount":130,"lineCount":16,"group":"v8.2","order":3},{"slug":"vite-press-plugin","draft":false,"title":"Vite Press Plugin","image":"https://images.unsplash.com/photo-1524668951403-d44b28200ce0?crop=entropy&fit=crop&h=1000&w=1000","tags":[],"date":"\/Date(1709510400000-0000)\/","content":"The Vite Press Plugin is an alternative to VitePress for adding Markdown features to existing Vite Vue or React projects. \nIt's a non-intrusive plugin for Vue and React Vite apps that want to add markdown powered content features without needing \nto adopt an opinionated framework for their entire App.\n\n### Universal Markdown Features\n\nA goal for vite-press-plugin is to implement a suite of universal markdown-powered features that can be reused across Vue, \nReact and .NET Razor and Blazor projects, allowing you to incorporate same set of markdown feature folders to power \nmarkdown content features across a range of websites built with different technologies.\n\n### Vite Apps with vite-press-plugin\n\nThe vite-press-plugin currently powers the markdown features in the static Vite Vue and React templates which are ideal \nfor creating static websites, blogs, documentation and marketing websites that can be hosted FREE on GitHub Pages CDN","url":"https://servicestack.net/posts/vite-press-plugin","wordCount":151,"lineCount":21,"group":"v8.2","order":4},{"slug":"endpoint-routing","draft":false,"title":"Full Integration with ASP.NET Core 8","image":"https://servicestack.net/img/whatsnew/v8.1/aspnet-8.webp","tags":[],"date":"\/Date(1707177600000-0000)\/","content":"We're happy to announce the latest ServiceStack v8.1 release supports deep integration with ASP.NET Core's \nstandardized features for execution of its APIs.\n\nThis reduces friction for integrating ServiceStack into existing .NET 8 Apps, encourages greater knowledge and reuse and \nsimplifies .NET development as developers have fewer concepts to learn and technology implementations \nto configure and maintain that are now applied across their entire .NET App.\n\nBetter yet, this is enabled by default in all of ServiceStack's new \n[Identity Auth .NET 8 templates](https://servicestack.net/start) which now embraces all these standard \nASP.NET Core features:\n\n- [ASP.NET Core Identity Auth](https://docs.servicestack.net/auth/identity-auth)\n- [ASP.NET Core IOC](https://docs.servicestack.net/releases/v8_01#asp.net-core-ioc)\n- [Endpoint Routing](https://docs.servicestack.net/releases/v8_01#endpoint-routing)\n- [System.Text.Json APIs](https://docs.servicestack.net/releases/v8_01#system.text.json)\n- [Open API v3 and Swagger UI](https://docs.servicestack.net/releases/v8_01#openapi-v3)\n- [JWT Identity Auth](https://docs.servicestack.net/releases/v8_01#jwt-identity-auth)","url":"https://docs.servicestack.net/releases/v8_01","wordCount":161,"lineCount":23,"group":"v8.1","order":1},{"slug":"system-json-apis","draft":false,"title":"System.Text.Json APIs","image":"https://servicestack.net/img/whatsnew/v8.1/system-text-json.png","tags":[],"date":"\/Date(1707177600000-0000)\/","content":"ServiceStack Endpoint Routing APIs now utilize **System.Text.Json** - the default high-performance async \nJSON serializer used in .NET Apps for serializing its JSON APIs.\n\n### Enhanced System.Text.Json\n\nServiceStack uses a custom `JsonSerializerOptions` to improve compatibility with existing ServiceStack DTOs and \nServiceStack's rich ecosystem of generic \n[Add ServiceStack Reference Service Clients](https://docs.servicestack.net/add-servicestack-reference), which is configured to:\n\n- Uses `CamelCaseNamingPolicy` for property names\n- Supports Case Insensitive Properties\n- Not serialize `null` properties\n- Serializes `TimeSpan` and `TimeOnly` Data Types with XML Schema Time format\n- Supports `[DataContract]` annotations\n- Supports Custom Enum Serialization","url":"https://docs.servicestack.net/releases/v8_01#system.text.json","wordCount":107,"lineCount":21,"group":"v8.1","order":2},{"slug":"openapi-v3","draft":false,"title":"Swashbuckle OpenAPI v3 and Swagger UI","image":"https://servicestack.net/img/whatsnew/v8.1/openapiv3-logo.png","tags":[],"date":"\/Date(1707177600000-0000)\/","content":"Utilizing the same **ASP.NET Core Endpoints** that the rest of the ASP.NET Core App uses enables your ServiceStack APIs \nto integrate with your wider ASP.NET Core application, opening up more opportunities for reuse of your ServiceStack APIs.\n\nThis opens up the ability to use common third party tooling like the popular `Swashbuckle` package used to to\nenable OpenAPI v3 specification generation of ASP .NET Core APIs which now includes ServiceStack APIs, \ndisplayed along-side Minimal and Web APIs. \n\nWe've created the **ServiceStack.AspNetCore.OpenApi** package to make this integration as easy as possible, which \nincorporates additional information from your ServiceStack APIs into Swagger metadata.","url":"https://docs.servicestack.net/releases/v8_01#openapi-v3","wordCount":118,"lineCount":15,"group":"v8.1","order":3},{"slug":"identity-auth-admin-users-ui","draft":false,"title":"Identity Auth Admin Users UI","image":"https://servicestack.net/img/whatsnew/v8.1/admin-ui-users-edit-custom.png","tags":[],"date":"\/Date(1707177600000-0000)\/","content":"The new Identity Auth Admin UI is an example of value-added features that can benefit all .NET Core App, that \nenables a built-in Admin UI that's only accessible to **Admin** Users for managing Identity Auth\nusers at `/admin-ui/users`.\n\nIt's a highly customizable UI feature that includes standard features to lockout users, change user passwords and manage their roles\nas well as being flexible enough to support Custom `ApplicationUser` Identity Models including:\n\n - Custom Search Results\n - Custom Search Behavior\n - Custom Sort Order\n - Custom Editable Fields\n - Custom User Creation and Validation\n - Admin User Events to run custom logic","url":"https://docs.servicestack.net/releases/v8_01#asp.net-core-identity-auth-admin-ui","wordCount":112,"lineCount":19,"group":"v8.1","order":4}]